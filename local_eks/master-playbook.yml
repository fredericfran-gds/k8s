---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address="192.168.50.10"
    args:
      creates: /etc/kubernetes/kubelet.conf
  
  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -u /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:docker /home/vagrant/.kube/config
 
  - name: Install calico tigera operator
    become: false
    shell: kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml >> pod_tigera_network_setup.txt
    args:
      chdir: $HOME
      creates: pod_tigera_network_setup.txt

  - name: Install calico
    become: false
    shell: kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml >> pod_calico_network_setup.txt
    args:
      chdir: $HOME
      creates: pod_calico_network_setup.txt

  - name: Generate join command
    become: false
    shell: kubeadm token create --print-join-command >> join_command.sh
    args:
      chdir: $HOME
      creates: join_command.sh

  - name: ansible copy file from remote to local.
    fetch:
      src: join_command.sh
      dest: ./
      flat: yes

  handlers:
    - name: docker status
      service: name=docker state=started 
